<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="114">
    <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="gauge" tokenGenerationKey="token"/>
    <pipelines group="basic">
    <pipeline name="pipeline-with-lock-all-manual" lockBehavior="lockOnFailure">
            <materials>
                <git url="material-for-pipeline-with-lock-all-manual" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="firstStage">
                <approval type="manual"/>
                <jobs>
                    <job name="basic-pipeline-run-till-file-exists-job">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>        
            <stage name="secondStage">
                <approval type="manual"/>
                <jobs>
                     <job name="basic-pipeline-run-till-file-exists-job">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    <pipeline name="up">
            <materials>
                <git url="material-for-up" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="down">
            <materials>
                <pipeline pipelineName="up" stageName="defaultStage" materialName="up"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="child-of-down">
            <materials>
                <pipeline pipelineName="down" stageName="defaultStage" materialName="down"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-run-till-file-exists">
            <materials>
                <git url="material-for-basic-pipeline-run-till-file-exists" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="downstream">
            <materials>
                <pipeline pipelineName="basic-pipeline-run-till-file-exists" stageName="defaultStage" materialName="basic-pipeline-run-till-file-exists-downstream"/>
                <git url="material-for-downstream" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-with-long-running-job">
            <materials>
                <git url="material-for-basic-pipeline-with-long-running-job" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>30</arg>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-fast">
            <materials>
                <git url="material-for-basic-pipeline-fast" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-with-job-resources">
            <materials>
                <git url="material-for-basic-pipeline-with-job-resources" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="job-basic-pipeline-with-job-resources">
                        <tasks>
                            <exec command="sleep">
                                <arg>30</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>test_resource</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-unlock-onComplete" lockBehavior="unlockWhenFinished">
            <materials>
                <git url="material-for-pipeline-unlock-onComplete" dest="tasks" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="firstStage">
                <jobs>
                    <job name="long">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="tasks"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="secondStage">
                <approval type="manual"/>
                <jobs>
                    <job name="long-fail">
                        <tasks>
                            <exec command="rake" args="wait_and_fail" workingdir="tasks"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="lastStage">
                <jobs>
                    <job name="forever">
                        <tasks>
                            <exec command="rake" args="wait_forever" workingdir="tasks"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-ls">
            <materials>
                <git url="material-for-pipeline-ls" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
             </pipeline>
    </pipelines>
    <pipelines group="dependency-group">
        <pipeline name="dependency-group-pipeline-1">
            <materials>
                <git url="material-for-dependency-group-pipeline-1" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="artifact_md5_verification">
        <pipeline name="artifact_md5_verification-pipeline-1">
            <materials>
                <git url="material-for-artifact_md5_verification-pipeline-1" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="artifact_md5_verification-pipeline-2">
            <materials>
                <git url="material-for-artifact_md5_verification-pipeline-2" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="edit-pipeline">
            <materials>
                <git url="material-for-edit-pipeline" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                           <exec command="sleep">
                                <arg>10</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
         <!-- d stands for diamond -->
        <pipeline name="d-up-left" template="dependency-pipeline-template">
            <materials>
                <git url="material-for-diamond-dependency" materialName="git-second" autoUpdate="true"/>
            </materials>
        </pipeline>
        <pipeline name="d-up-right" template="dependency-pipeline-template">
            <materials>
                <git url="material-for-diamond-dependency" materialName="git-second" autoUpdate="true"/>
            </materials>
        </pipeline>
        <pipeline name="d-down" template="autoStagePipelineTemplate">
            <materials>
                <pipeline pipelineName="d-up-left" stageName="defaultStage"/>
                <pipeline pipelineName="d-up-right" stageName="defaultStage"/>
                <git url="material-for-diamond-dependency" materialName="git-second" autoUpdate="true"/>
            </materials>
        </pipeline>
         <pipeline name="pipeline-ls">
             <materials>
             <hg url="material-for-pipeline-ls" dest="git" materialName="git" autoUpdate="false"/>
             </materials>
             <stage name="defaultStage">
                <jobs>
                 <job name="defaultJob">
                      <tasks>
                        <exec command="ls">
                        </exec>
                     </tasks>
                 </job>
                 </jobs>
            </stage>
         </pipeline>

    </pipelines>
    <templates>
            <pipeline name="dependency-pipeline-template">
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>

        <pipeline name="autoStagePipelineTemplate">
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>

    </templates>

    <environments>
        <environment name="prod">
            <pipelines>
                <pipeline name="basic-pipeline-with-long-running-job"/>
            </pipelines>
        </environment>
        <environment name="uat">
  		    <environmentvariables>
  		  		<variable name="ENV_LEVEL_VARIABLE"><value>environment</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_PIPELINE"><value>does-not-matter</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>does-not-matter</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>does-not-matter</value></variable>
  		  		<variable name="ENVIRONMENT_LEVEL_VARIABLE_OVERRIDDEN_BY_TRIGGER"><value>does-not-matter</value></variable>
			    </environmentvariables>
    			
  		</environment>
        <environment name="internal">
        </environment>
    </environments>
     

</cruise>
