<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="115">
    <server artifactsdir="artifacts" commandRepositoryLocation="default" serverId="gauge" tokenGenerationKey="token"/>
    <pipelines group="basic">
     <pipeline name="pipeline-clean-working-dir">
            <materials>
                <git url="material-for-clean-working-dir" materialName="basic-git-material" autoUpdate="false"/>
            </materials>
            <stage name="setup">
                <approval type="manual"/>
                <jobs>
                    <job name="setupJob">
                        <tasks>
                            <exec command="touch" args="abc.txt"/>
                            <exec command="mkdir" args="bar"/>
                            <exec command="touch" args="xyz.txt"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="first">
                <approval type="manual"/>
                <jobs>
                    <job name="firstJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="second" cleanWorkingDir="true">
                <approval type="manual"/>
                <jobs>
                    <job name="secondJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
     </pipeline>

     <pipeline name="basic-environment-pipeline">
            <materials>
                <git url="material-for-basic-environment-pipeline" dest="git" autoUpdate="false" materialName="git-material"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>20</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
     </pipeline>

     <pipeline name="two-stage-pipeline">
            <materials>
                <git url="material-for-two-stage-pipeline" dest="git" autoUpdate="false" materialName="git"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                       <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="anotherStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                       <tasks>
                            <exec command="ls">
                            </exec>
                       </tasks>
                    </job>
                </jobs>
            </stage>
    </pipeline>
    <pipeline name="hung-job-pipeline">
            <materials>
                <git url="material-for-hung-job-pipeline" dest="git" autoUpdate="false" materialName="git-material"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep" args="300"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
    </pipeline>
    <pipeline name="hung-job-zero-timeout-pipeline">
            <materials>
                <git url="material-for-hung-job-zero-timeout-pipeline" dest="git" autoUpdate="false" materialName="git-material"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep" args="160"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
    </pipeline>
      <pipeline name="edit-pipeline-with-3-stages">
            <materials>
                <git url="material-for-edit-pipeline-with-3-stages" dest="git" autoUpdate="false" materialName="git-material"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="second">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                      <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="third">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                           <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>   
        </pipeline>

      <pipeline name="pipeline-with-lock-all-manual" lockBehavior="lockOnFailure">
            <materials>
                <git url="material-for-pipeline-with-lock-all-manual" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="firstStage">
                <approval type="manual"/>
                <jobs>
                    <job name="basic-pipeline-run-till-file-exists-job">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>        
            <stage name="secondStage">
                <approval type="manual"/>
                <jobs>
                     <job name="basic-pipeline-run-till-file-exists-job">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-with-lock" lockBehavior="lockOnFailure">
            <materials>
                <git url="material-for-pipeline-with-lock" dest="git" materialName="pipeline-with-lock-material" autoUpdate="false"/>
            </materials>
            <stage name="stage-1">
                <approval type="manual"/>
                <jobs>
                    <job name="fast">
                       <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="stage-2">
                <jobs>
                    <job name="long">
                       <tasks>
                            <exec command="sleep">
                                <arg>30</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    <pipeline name="up">
            <materials>
                <git url="material-for-up" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="down">
            <materials>
                <pipeline pipelineName="up" stageName="defaultStage" materialName="up"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="child-of-down">
            <materials>
                <pipeline pipelineName="down" stageName="defaultStage" materialName="down"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>5</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-run-till-file-exists">
            <materials>
                <git url="material-for-basic-pipeline-run-till-file-exists" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-wait-till-file-exists">
            <materials>
                <git url="material-for-basic-pipeline-wait-till-file-exists" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="rake" args="wait_or_fail" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="downstream">
            <materials>
                <pipeline pipelineName="basic-pipeline-run-till-file-exists" stageName="defaultStage" materialName="basic-pipeline-run-till-file-exists-downstream"/>
                <git url="material-for-downstream" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-with-long-running-job">
            <materials>
                <git url="material-for-basic-pipeline-with-long-running-job" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>30</arg>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-fast">
            <materials>
                <git url="material-for-basic-pipeline-fast" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="timer-pipeline">
            <materials>
                <git url="material-for-timer-pipeline" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="basic-pipeline-with-job-resources">
            <materials>
                <git url="material-for-basic-pipeline-with-job-resources" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="job-basic-pipeline-with-job-resources">
                        <tasks>
                            <exec command="sleep">
                                <arg>30</arg>
                            </exec>
                        </tasks>
                        <resources>
                            <resource>test_resource</resource>
                        </resources>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-unlock-onComplete" lockBehavior="unlockWhenFinished">
            <materials>
                <git url="material-for-pipeline-unlock-onComplete" dest="tasks" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="firstStage">
                <jobs>
                    <job name="long">
                        <tasks>
                            <exec command="rake" args="wait_for_stopjob_file" workingdir="tasks"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="secondStage">
                <approval type="manual"/>
                <jobs>
                    <job name="long-fail">
                        <tasks>
                            <exec command="rake" args="wait_and_fail" workingdir="tasks"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="lastStage">
                <jobs>
                    <job name="forever">
                        <tasks>
                            <exec command="rake" args="wait_forever" workingdir="tasks"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-ls">
            <materials>
                <git url="material-for-pipeline-ls" dest="git" materialName="git-pipeline-ls" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
       </pipeline>
       <pipeline name="pipeline-stageDetails">
            <materials>
                <git url="material-for-pipeline-stageDetails" dest="git" materialName="git-stageDetails" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
       </pipeline>

       <pipeline name="basic-auto-pipeline-stageDetails">
            <materials>
                <git url="material-for-basic-auto-pipeline-stageDetails" dest="git-auto-stageDetails" materialName="git"/>
            </materials>
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="edit-pipeline-with-tasks">
            <materials>
                <git url="material-for-edit-pipeline-with-tasks" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <ant target="longsleep" workingdir="hg/dev"/>
							<rake target="all" workingdir="hg/dev"/>
							<nant target="all" workingdir="hg/dev"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
         <pipeline name="pipeline-with-failing-stage" lockBehavior="lockOnFailure">
            <materials>
                <git url="material-for-pipeline-with-failing-stage" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                <job name="defaultJob">
                    <tasks>
                    <exec command="executable-that-will-not-be-found"/>
                    </tasks>
                </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-with-wierd-command">
            <params>
                <param name="wierd-command">some_command_that_can_never_ever_exist</param>
            </params>
            <materials>
                <git url="material-for-pipeline-with-wierd-command" dest="git" autoUpdate="false" materialName="git"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="#{wierd-command}_with_tail"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>

        <pipeline name="pipeline-with-3-jobs">
            <materials>
                <git url="material-for-pipeline-with-3-jobs" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="first">
                        <tasks>
                         <exec command="rake" args="wait_for_stopjob_file" workingdir="git"/>
                         </tasks>
                    </job>
                    <job name="second">
                         <tasks>
                             <exec command="executable-that-will-not-be-found"/>
                         </tasks>
                    </job>
                    <job name="third">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-for-job-rerun-run-multiple-instance">
            <materials>
                <git url="material-for-pipeline-for-job-rerun-run-multiple-instance" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
            	<approval type="manual"/>
                <jobs>
                    <job name="first">
                        <tasks>
                            <exec command="/bin/sh">
                            	<arg>-c</arg>
                            	<arg>echo</arg>
                            	<arg>Job Run Count: </arg>
                            	<arg>$GO_JOB_RUN_COUNT</arg>
                            	<arg> Job Run Index: </arg>
                            	<arg>$GO_JOB_RUN_INDEX</arg>
                            	<runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="breadcrumb-pipeline">
            <materials>
                <git url="material-for-breadcrumb-pipeline" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="sleep">
                                <arg>120</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>     
         <pipeline name="downstream-pipeline">
            <materials>
                <pipeline pipelineName="basic-pipeline-fast" stageName="defaultStage" materialName="upstream-material"/>
                <git url="material-for-downstream-pipeline" dest="git" materialName="git" >
                    <filter>
                        <ignore pattern="**/*"/>
                    </filter>
                </git>
            </materials>
            <stage name="defaultStage">
                <approval type="success"/>
                <jobs>
                    <job name="defaultJob">
                
                           <tasks>
                             <exec command="sleep">
                                <arg>15</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                        
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="dependency-group">
    <pipeline name="first" template="dependency-pipeline-template">
            <materials>
                <git url="marerial-for-first" materialName="git-first" autoUpdate="true"/>
            </materials>
        </pipeline>
        
        <pipeline name="child-of-first" template="dependency-pipeline-template">
            <materials>
                <git url="material-for-child-of-first" materialName="git-child-of-first" autoUpdate="true"/>
                <pipeline pipelineName="first" stageName="defaultStage"/>
            </materials>
        </pipeline>
        
        <pipeline name="grandchild-of-first" template="dependency-pipeline-template">
            <materials>
                <git url="material-for-grandchild-of-first" materialName="git-grandchild-of-first" autoUpdate="true"/>
                <pipeline pipelineName="child-of-first" stageName="defaultStage"/>
                <pipeline pipelineName="first" stageName="defaultStage"/>
            </materials>
        </pipeline>
        <pipeline name="dependency-group-pipeline-1">
            <materials>
                <git url="material-for-dependency-group-pipeline-1" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="autoFirst" template="autoStagePipelineTemplate">
            <materials>
                <git url="material-for-autoFirst" materialName="git-first">
                    <filter>
                        <ignore pattern="*.oneignore"/>
                        <ignore pattern="*.twoignore"/>
                    </filter>
                </git>
            </materials>
        </pipeline>
        <pipeline name="child-of-autoFirst" template="autoStagePipelineTemplate">
            <materials>
                <git url="material-for-child-of-autoFirst" materialName="git-first" dest="gitfolder">
                    <filter>
                        <ignore pattern="*.twoignore"/>
                    </filter>
                </git>
                <pipeline pipelineName="autoFirst" stageName="defaultStage"/>
            </materials>
        </pipeline>
        <pipeline name="grandchild-of-autoFirst" template="autoStagePipelineTemplate">
            <materials>
                <git url="material-for-grandchild-of-autoFirst" materialName="git-first" dest="gitfolder"/>
                <pipeline pipelineName="child-of-autoFirst" stageName="defaultStage"/>
            </materials>
        </pipeline>
         <pipeline name="fourth" template="dependency-pipeline-template">
            <materials>
                <git url="material-for-fourth" materialName="git-first" autoUpdate="true"/>
            </materials>
        </pipeline>
        <pipeline name="fifth" template="dependency-pipeline-template">
            <materials>
                <pipeline pipelineName="fourth" stageName="defaultStage"/>
            </materials>
        </pipeline>
        <pipeline name="another-sixth-manual">
            <materials>
                <pipeline pipelineName="fourth" stageName="defaultStage"/>
                <pipeline pipelineName="fifth" stageName="defaultStage"/>
            </materials>
            <stage name="defaultStage">
            <approval type="manual"/>
                <jobs>
                    <job name="job-of-last">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
    </pipelines>
    <pipelines group="artifact_md5_verification">
        <pipeline name="artifact_md5_verification-pipeline-1">
            <materials>
                <git url="material-for-artifact_md5_verification-pipeline-1" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="artifact_md5_verification-pipeline-2">
            <materials>
                <git url="material-for-artifact_md5_verification-pipeline-2" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls">
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="edit-pipeline">
            <materials>
                <git url="material-for-edit-pipeline" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                           <exec command="sleep">
                                <arg>10</arg>
                                <runif status="passed"/>
                            </exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="parent_pipeline">
      <materials>
        <svn url="svn-url-svn-pipeline" dest="svn" autoUpdate="false" materialName="svn">
          <filter>
            <ignore pattern="*.ignore"/>
          </filter>
        </svn>
        <git url="git-on-git-pipeline" dest="git" autoUpdate="false" materialName="git">
          <filter>
            <ignore pattern="*.ignore"/>
          </filter>
        </git>
      </materials>
      <stage name="first_stage">
        <approval type="manual"/>
        <jobs>
          <job name="defaultJob">
            <tasks>
                <exec command="rake" args="wait_for_stopjob_file" workingdir="tasks"/>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="second_stage">
        <approval type="manual"/>
        <jobs>
          <job name="defaultJob">
            <tasks>
                <exec command="rake" args="wait_for_stopjob_file" workingdir="tasks"/>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    </pipelines>

    <pipelines group="fetch-artifact-from-ancestor-group">
      <pipeline name="uppest_pipeline">
      <materials>
        <git url="material-for-uppest_pipeline" materialName="git_material"/>
      </materials>
      <stage name="uppest-stage1">
      <approval type="manual"/>
        <jobs>
          <job name="uppest-job1">
            <tasks>
               <exec command="echo" args="hello"/>
            </tasks>
            <artifacts>
              <artifact type="build" src="first"/>
            </artifacts>
          </job>
          <job name="uppest-job1a">
            <tasks>
               <exec command="echo" args="hello"/>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="uppest-stage2">
        <jobs>
          <job name="uppest-job2">
            <tasks>
               <exec command="echo" args="hello"/>
            </tasks>
            <artifacts>
              <artifact type="build" src="second"/>
            </artifacts>
          </job>
        </jobs>
      </stage>
      <stage name="uppest-stage3">
        <jobs>
          <job name="uppest-job3">
            <tasks>
                <exec command="echo" args="hello"/>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="upper_pipeline">
      <materials>
        <pipeline pipelineName="uppest_pipeline" stageName="uppest-stage2"/>
      </materials>
      <stage name="upper-stage1">
       <approval type="manual"/>
        <jobs>
          <job name="upper-job1">
            <tasks>
              <exec command="echo" args="hello"/>
              <fetchartifact artifactOrigin="gocd" pipeline="uppest_pipeline" stage="uppest-stage1" job="uppest-job1" srcfile="first"/>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="upper_peer_pipeline">
      <materials>
        <pipeline pipelineName="uppest_pipeline" stageName="uppest-stage1"/>
      </materials>
      <stage name="upper-peer-stage1">
       <approval type="manual"/>
        <jobs>
          <job name="upper-peer-job1">
            <tasks>
               <exec command="echo" args="hello"/>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="up_pipeline">
      <materials>
        <pipeline pipelineName="upper_pipeline" stageName="upper-stage1"/>
        <pipeline pipelineName="upper_peer_pipeline" stageName="upper-peer-stage1"/>
      </materials>
      <stage name="up-stage1">
        <approval type="manual"/>
        <jobs>
          <job name="up-job1">
            <tasks>
                <exec command="echo" args="hello"/>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    <pipeline name="down_pipeline">
      <materials>
        <pipeline pipelineName="up_pipeline" stageName="up-stage1"/>
      </materials>
      <stage name="down-stage1">
      <approval type="manual"/>
        <jobs>
          <job name="down-job1">
            <tasks>
              <fetchartifact artifactOrigin="gocd" pipeline="uppest_pipeline/upper_pipeline/up_pipeline" stage="uppest-stage1" job="uppest-job1" srcfile="first"/>
              <fetchartifact artifactOrigin="gocd" pipeline="uppest_pipeline/upper_peer_pipeline/up_pipeline" stage="uppest-stage1" job="uppest-job1" srcfile="first"/>
            </tasks>
          </job>
        </jobs>
      </stage>
      <stage name="down-stage2">
      <approval type="manual"/>
        <jobs>
          <job name="down-job2">
            <tasks>
            </tasks>
          </job>
        </jobs>
      </stage>
    </pipeline>
    </pipelines>
    <templates>
            <pipeline name="dependency-pipeline-template">
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>

        <pipeline name="autoStagePipelineTemplate">
            <stage name="defaultStage">
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="ls"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>

    </templates>

    <environments>
        <environment name="prod">
            <pipelines>
                <pipeline name="basic-pipeline-with-long-running-job"/>
            </pipelines>
        </environment>
        <environment name="uat">
  		    <environmentvariables>
  		  		<variable name="ENV_LEVEL_VARIABLE"><value>environment</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_PIPELINE"><value>does-not-matter</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>does-not-matter</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>does-not-matter</value></variable>
  		  		<variable name="ENVIRONMENT_LEVEL_VARIABLE_OVERRIDDEN_BY_TRIGGER"><value>does-not-matter</value></variable>
			    </environmentvariables>
    			
  		</environment>
        <environment name="internal">
        </environment>
    </environments>
     

</cruise>
