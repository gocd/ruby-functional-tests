<?xml version="1.0" encoding="UTF-8"?>
<!-- *************************GO-LICENSE-START******************************
 * Copyright 2016 ThoughtWorks, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *************************GO-LICENSE-END******************************* -->

<cruise xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="cruise-config.xsd" schemaVersion="133">
    <server commandRepositoryLocation="default" serverId="gauge" tokenGenerationKey="token">
      <artifacts>
        <artifactsDir>artifacts</artifactsDir>
      </artifacts>
    </server>
    <pipelines group="basic">

    <pipeline name="environment-pipeline">
    <materials>
        <git url="environment-pipeline" dest="git" materialName="git" autoUpdate="false"/>
        </materials>
        <stage name="defaultStage">
            <approval type="manual"/>
            <jobs>
                <job name="short">
                    <tasks>
                        <exec command="sleep" args="12"/>
                    </tasks>
                    </job>
            </jobs>
        </stage>
        <stage name="secondStage">
            <jobs>
                <job name="long">
                    <tasks>
                        <exec command="sleep" args="40"/>
                    </tasks>
                    </job>
            </jobs>
        </stage>
        <stage name="lastStage">
        <approval type="manual"/>
            <jobs>
                <job name="long">
                    <tasks>
                        <exec command="sleep" args="40"/>
                    </tasks>
                    </job>
            </jobs>
        </stage>
    </pipeline>
    <pipeline name="environment-failing-pipeline" lockBehavior="lockOnFailure">
            <materials>
                <git url="material-for-environment-failing-pipeline" dest="git" materialName="git" autoUpdate="false"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <exec command="executable-that-will-not-be-found"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="secondStage">
                <approval type="manual"/>
                <jobs>
                    <job name="defaultJob">
                        <tasks>
                            <ant target="sleep60" workingdir="hg/dev"/>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="pipeline-with-environment-variables">
            <environmentvariables>
                <variable name="PIPELINE_LEVEL_VARIABLE"><value>pipeline</value></variable>
                <variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_PIPELINE"><value>pipeline-overrides-env</value></variable>
                <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>does-not-matter</value></variable>
                <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>does-not-matter</value></variable>
                <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_JOB_ONLY"><value>value-set-by-pipeline</value></variable>
                <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_STAGE_ONLY"><value>value-set-by-pipeline</value></variable>
            </environmentvariables>
            <materials>
                <git url="material-for-pipeline-with-environment-variables" dest="git" materialName="git" autoUpdate="true"/>
            </materials>
            <stage name="defaultStage">
                <approval type="manual"/>
                <environmentvariables>
                    <variable name="STAGE_LEVEL_VARIABLE"><value>stage</value></variable>
                    <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>stage-overrides-pipeline</value></variable>
                    <variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>stage-overrides-env</value></variable>
                    <variable name="STAGE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>does-not-matter</value></variable>
                    <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_STAGE_ONLY"><value>stage-overrides-pipeline</value></variable>
                </environmentvariables>
                <jobs>
                    <job name="pipeline-with-environment-variables-job">
                        <environmentvariables>
                            <variable name="JOB_LEVEL_VARIABLE"><value>job</value></variable>
                            <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>job-overrides-pipeline</value></variable>
                            <variable name="STAGE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>job-overrides-stage</value></variable>
                            <variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>job-overrides-env</value></variable>
                            <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_JOB_ONLY"><value>job-overrides-pipeline</value></variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="sleep" args="5"/>
                            <exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo JOB_LEVEL_VARIABLE=$JOB_LEVEL_VARIABLE.</arg>
              				</exec>
                            <exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo STAGE_LEVEL_VARIABLE=$STAGE_LEVEL_VARIABLE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENVIRONMENT_LEVEL_VARIABLE_OVERRIDDEN_BY_TRIGGER=$ENVIRONMENT_LEVEL_VARIABLE_OVERRIDDEN_BY_TRIGGER.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE=$PIPELINE_LEVEL_VARIABLE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE=$ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_PIPELINE=$ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_PIPELINE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_JOB_ONLY=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_JOB_ONLY.</arg>
              				</exec>
                            <exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_STAGE_ONLY=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_STAGE_ONLY.</arg>
              				</exec>
                        </tasks>
                    </job>
                    <job name="another-job">
                        <environmentvariables>
                            <variable name="JOB_LEVEL_VARIABLE"><value>another-job</value></variable>
                            <variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>another-job-overrides-env</value></variable>
                            <variable name="STAGE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>another-job-overrides-stage</value></variable>
                            <variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>another-job-overrides-pipeline</value></variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="sleep" args="5"/>
                            <exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo JOB_LEVEL_VARIABLE=$JOB_LEVEL_VARIABLE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB=$ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE=$ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo STAGE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB=$STAGE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_JOB_ONLY=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_JOB_ONLY.</arg>
              				</exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
            <stage name="secondStage">
                <environmentvariables>
                    <variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>secondstage-overrides-env</value></variable>
                	<variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>secondstage-overrides-pipeline</value></variable>
                </environmentvariables>
                <jobs>
                    <job name="job">
                        <environmentvariables>
                            <variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>second-job-overrides-env</value></variable>
                        	<variable name="PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>second-job-overrides-pipeline</value></variable>
                        </environmentvariables>
                        <tasks>
                            <exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE=$ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB=$ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE.</arg>
              				</exec>
              				<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB.</arg>
              				</exec>
							<exec command="/bin/bash">
                				<arg>-c</arg>
                				<arg>echo PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_STAGE_ONLY=$PIPELINE_LEVEL_VARIABLE_OVERRIDDEN_BY_ONE_STAGE_ONLY.</arg>
              				</exec>
                        </tasks>
                    </job>
                </jobs>
            </stage>
        </pipeline>
        <pipeline name="environment-pipeline-locked" lockBehavior="lockOnFailure">
         <materials>
           <git url="material-for-environment-pipeline-locked" dest="git" materialName="git" autoUpdate="false"/>
             </materials>
             <stage name="defaultStage">
               <approval type="manual"/>
               <jobs>
                   <job name="short">
                         <tasks>
                             <exec command="sleep" args="12"/>
                         </tasks>
                      </job>
                 </jobs>
           </stage>
             <stage name="secondStage">
               <jobs>
                   <job name="long">
                         <tasks>
                             <exec command="sleep" args="40"/>
                         </tasks>
                      </job>
                 </jobs>
           </stage>
           <stage name="lastStage">
             <approval type="manual"/>
               <jobs>
                   <job name="long">
                         <tasks>
                             <exec command="sleep" args="40"/>
                         </tasks>
                      </job>
                 </jobs>
           </stage>
         </pipeline>
    </pipelines>
    <environments>
        <environment name="test-env">
  		    <environmentvariables>
  		  		<variable name="ENV_LEVEL_VARIABLE"><value>environment</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_PIPELINE"><value>does-not-matter</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_STAGE"><value>does-not-matter</value></variable>
  		  		<variable name="ENV_LEVEL_VARIABLE_OVERRIDDEN_BY_JOB"><value>does-not-matter</value></variable>
  		  		<variable name="ENVIRONMENT_LEVEL_VARIABLE_OVERRIDDEN_BY_TRIGGER"><value>does-not-matter</value></variable>
			    </environmentvariables>
    			<pipelines>
    				<pipeline name="environment-pipeline"/>
    				<pipeline name="environment-pipeline-locked"/>
    				<pipeline name="environment-failing-pipeline"/>
    				<pipeline name="pipeline-with-environment-variables"/>
    			</pipelines>
  		</environment>
        <environment name="internal">
        </environment>
    </environments>
</cruise>
